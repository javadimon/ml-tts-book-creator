/*
 * TTS documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.1.73
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.speechpro.cloud.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * WebSocketTextParam
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-08-12T22:49:47.436+03:00")
public class WebSocketTextParam {
  @SerializedName("mime")
  private String mime = null;

  public WebSocketTextParam(String mime) {
    this.mime = mime;
  }

  public WebSocketTextParam mime(String mime) {
    this.mime = mime;
    return this;
  }

   /**
   * Type of content
   * @return mime
  **/
  @ApiModelProperty(example = "text/plain", required = true, value = "Type of content")
  public String getMime() {
    return mime;
  }

  public void setMime(String mime) {
    this.mime = mime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebSocketTextParam webSocketTextParam = (WebSocketTextParam) o;
    return Objects.equals(this.mime, webSocketTextParam.mime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebSocketTextParam {\n");

    sb.append("    mime: ").append(toIndentedString(mime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

